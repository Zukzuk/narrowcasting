# Stage 1: Build Stage
FROM node:20-alpine AS build

# Accept args as build arguments
ARG APP_VERSION_TAG
ENV APP_VERSION_TAG=$APP_VERSION_TAG
# npm will install dependencies and devDependencies
ENV NODE_ENV=development 

# Set up the working directory
WORKDIR /usr/src/app
COPY package*.json ./
RUN npm install

# Copy application code
COPY . .

# Build the project (copies the public folder and compiles TypeScript)
RUN npm run build

# Stage 2: Production Stage
FROM node:20-alpine

# Accept args as build arguments
ARG APP_VERSION_TAG
ENV APP_VERSION_TAG=$APP_VERSION_TAG
# Set environment to production for optimized dependencies
ENV NODE_ENV=production

# Set up the working directory and install prd dependencies
WORKDIR /usr/src/app
COPY package*.json ./
RUN npm install --only=production

# Copy compiled application code from the build stage
COPY --from=build /usr/src/app/dist ./dist

# Expose the application port
EXPOSE 3000

# Start the application
CMD ["node", "dist/server/index.js"]

